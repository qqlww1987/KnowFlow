# =======================================================
# KnowFlow - 服务器端业务配置
# =======================================================
#
# 说明:
# 1. 这是系统的核心业务配置文件。
# 2. 所有配置项都可以在启动时通过环境变量覆盖。
#    覆盖规则: 大写 + 双下划线替换层级。
#    示例: 要覆盖 app.dev_mode, 设置环境变量 KNOWFLOW_APP_DEV_MODE=true
#
# =======================================================

app:
  # 开发模式
  # true: 启用开发模式，跳过某些耗时步骤，输出更详细的日志。
  # false: 生产模式。
  dev_mode: false

  # 临时文件清理
  # true: 在处理完成后自动清理临时文件（如上传的原始文件、中间文件）。
  # false: 保留临时文件，便于调试。
  # 注意：在开发模式下，此项默认为 false，但仍可被环境变量覆盖。
  cleanup_temp_files: true

  # 全局分块方法
  # 'smart': 智能分块，基于AST的语义分块（默认推荐）。
  # 'advanced': 高级分块，混合策略+动态阈值调整。
  # 'basic': 基础分块，简单的文本分割。
  chunk_method: "smart"

excel:
  # 默认分块策略
  # 'html': 将Excel内容转换为HTML表格进行分块。
  # 'row': 按行进行分块。
  default_strategy: "html"

  # HTML分块的默认行数
  html_chunk_rows: 10

  # 是否启用智能分块大小计算（仅对HTML策略有效）
  enable_smart_chunk_size: true

  # 在行分块模式下合并的相邻行数
  merge_adjacent_rows: 1

  # 是否预处理合并的单元格
  preprocess_merged_cells: true

  # 是否格式化数字（例如，将10000显示为10,000）
  number_formatting: true

  # 最小分块字符数
  min_chunk_size: 50

  # 最大分块字符数
  max_chunk_size: 8000

  # 是否在HTML分块中尽量保持表格结构
  preserve_table_structure: true

# =======================================================
# MinerU 文档解析配置 (客户端配置)
# =======================================================
mineru:
  # FastAPI 客户端配置
  fastapi:
    # FastAPI 服务地址
    # 本地开发: http://localhost:8888
    # Docker部署: http://host.docker.internal:8888 (Docker Desktop)
    #           或 http://宿主机IP:8888 (Linux Docker)
    #           或 http://mineru-api:8888 (Docker Compose网络)
    url: "http://8.134.177.47:18001"
    
    # HTTP 请求超时时间（秒）
    timeout: 30000
  
  # 默认使用的后端类型
  # 选项: pipeline, vlm-transformers,  vlm-sglang-client
  default_backend: "pipeline"
  
  # Pipeline 后端请求参数
  pipeline:
    # 解析方法: auto, txt, ocr
    parse_method: "auto"
    
    # 文档语言（提升OCR准确率）
    lang: "ch"
    
    # 是否启用公式解析
    formula_enable: true
    
    # 是否启用表格解析
    table_enable: true
  
  # VLM 后端配置
  vlm:
    sglang:
      # SGLang 服务器地址（vlm-sglang-client 后端需要）
      # Docker部署时同样需要使用宿主机IP或容器网络地址
      server_url: "http://host.docker.internal:30000"



